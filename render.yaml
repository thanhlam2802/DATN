services:
  - type: web
    name: datn-backend
    env: docker
    plan: free
    rootDir: backend
    buildCommand: chmod +x ./mvnw && ./mvnw clean package -DskipTests
    envVars:
      - key: SPRING_DATASOURCE_URL
        value: jdbc:sqlserver://datn.ct4sc6oi2i77.ap-southeast-1.rds.amazonaws.com:1433;databaseName=datn;encrypt=true;trustServerCertificate=true
      - key: SPRING_PROFILES_ACTIVE
        value: production
      - key: PORT
        value: 8080

  - type: web
    name: datn-core-banking
    env: docker
    plan: free
    rootDir: core-banking-service
    buildCommand: chmod +x ./mvnw && ./mvnw clean package -DskipTests
    envVars:
      - key: SPRING_DATASOURCE_URL
        value: jdbc:sqlserver://datn.ct4sc6oi2i77.ap-southeast-1.rds.amazonaws.com:1433;databaseName=core_banking;encrypt=true;trustServerCertificate=true
      - key: SPRING_PROFILES_ACTIVE
        value: production
      - key: PORT
        value: 8081
      - key: KAFKA_BOOTSTRAP_SERVERS
        value: your-upstash-kafka-url:9092
      - key: REDIS_HOST
        value: datn-redis.onrender.com
      - key: VAULT_ADDR
        value: https://datn-vault.onrender.com

  - type: web
    name: datn-notification
    env: docker
    plan: free
    rootDir: notification-service
    buildCommand: chmod +x ./mvnw && ./mvnw clean package -DskipTests
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: production
      - key: PORT
        value: 9821
      - key: KAFKA_BOOTSTRAP_SERVERS
        value: your-upstash-kafka-url:9092

  - type: redis
    name: datn-redis
    plan: free
    maxmemoryPolicy: allkeys-lru
    ipAllowList: []



  - type: web
    name: datn-vault
    env: docker
    plan: free
    rootDir: vault-service
    buildCommand: chmod +x ./mvnw && ./mvnw clean package -DskipTests
    envVars:
      - key: VAULT_DEV_ROOT_TOKEN_ID
        value: myroot
      - key: VAULT_DEV_LISTEN_ADDRESS
        value: 0.0.0.0:8200 