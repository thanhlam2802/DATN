# src/main/resources/graphql/bus.graphqls
#Scalar Global
scalar BigDecimal
scalar DateTime
scalar Date
# --- Kiểu dữ liệu cho Image Response (được sử dụng trong BusImageResponse) ---
type ImageResponse {
    id: ID!
    url: String!
    altText: String # Cho phép null
    uploadedAt: String # Phản ánh việc chuyển đổi OffsetDateTime sang String trong DTO
    publicId: String!
}

# --- Kiểu dữ liệu cho BusImage Response (được sử dụng trong BusResponse) ---
type BusImageResponse {
    busId: ID!
    imageId: ID!
    image: ImageResponse! # Sử dụng ImageResponse DTO
}

# --- Kiểu dữ liệu Bus (Phản ánh cấu trúc BusResponse DTO) ---
type Bus { # Có thể đổi tên thành BusResponse nếu bạn muốn rõ ràng hơn trong schema
    id: ID!
    name: String!
    licensePlate: String!
    totalSeats: Int!
    categoryId: ID!
    categoryName: String
    ownerId: ID!
    ownerName: String
    busImages: [BusImageResponse!]
    createdAt: DateTime
    updatedAt: DateTime
}

# --- Kiểu đầu vào cho Create Bus (Không thay đổi) ---
input CreateBusInput {
    name: String!
    licensePlate: String!
    totalSeats: Int!
    categoryId: ID!
    ownerId: ID!
    imageIds: [ID!]
}

# --- Kiểu đầu vào cho Update Bus (Không thay đổi) ---
input UpdateBusInput {
    name: String
    licensePlate: String
    totalSeats: Int
    categoryId: ID
    ownerId: ID
    imageIds: [ID!]
}

# --- Định nghĩa các Query (đọc dữ liệu) ---
extend type Query {
    findAllBuses: [Bus!]!
    findBusById(id: ID!): Bus
    findBusesByOwnerId(ownerId: ID!): [Bus!] # <-- ĐÃ ĐỔI TÊN TẠI ĐÂY
    findBusesByCategoryId(categoryId: ID!): [Bus!]!
    searchBuses(name: String, licensePlate: String): [Bus!]!
}

# --- Định nghĩa các Mutation (ghi dữ liệu) ---
extend type Mutation {
    createBus(input: CreateBusInput!): Bus!
    updateBus(id: ID!, input: UpdateBusInput!): Bus!
    deleteBus(id: ID!): Boolean!
}